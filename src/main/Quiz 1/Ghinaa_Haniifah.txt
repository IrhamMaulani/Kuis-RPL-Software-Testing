1.	Dewasa ini, pembuatan testing pada perangkat lunak umum dilakukan pada saat tahap implementasi yang dilakukan oleh 
    software engineer. Berikan opini kalian apakah software engineer pada tahap implementasi wajib melakukan test atau 
    tidak?
2.	Unit test dan integration test merupakan test yang dilakukan pada tahap implementasi. berikan pendapat kalian jika 
    dua test ini tidak dilakukan beserta dampak yang akan terjadi pada perangkat lunak
3.	Berikan pendapat kalian tentang pekerjaan QA Engineer sedangkan disisi lain Software Engineer telah melakukan testing
4.	Terdapat banyak test pada perangkat lunak, mulai dari test business logic, UI, UX, Performa, sampai keamanan. Namun 
    tidak semuanya dapat dilakukan karena keterbatasan waktu dan mahalnya biaya yang harus dikeluarkan. Berikan pendapat 
    kalian dampak apa yang terjadi jika pengujian diatas tidak diberikan pada perangkat lunak
5.	Berikan pendapat kalian tentang testing perangkat lunak secara manual? Apakah di saat banyaknya testing secara 
    otomatisasi dilakukan testing secara manual perlu dilakukan?

Jawab:
1.	Menurut Akalanaka Mailewa, Jayanrga Herath dan Susan Herath pada jurnal “A Survey of Effective and Efficient Software 
    Testing”, software testing merupakan sebuah proses pengeksekusian program atau aplikasi dengan maksud untuk menemukan 
    sebuah bug pada perangkat lunak atau dengan kata lain testing ini artinya membandingkan antara hasil yang aktual 
    dengan hasil yang diekspektasikan. Berdasarkan sumber yang saya baca, software testing bisa dilakukan pada tahap 
    implementasi yang bisa dilakukan oleh software engineer. Software testing ini sangat penting untuk dilakukan karena 
    dengan ini software engineer akan dimudahkan dalam mengenali error atau kecacatan yang terdapat pada perangkat lunak.
    Jadi menurut saya software testing wajib dilakukan karena ini akan mempermudah dalam pengembangan perangkat lunak 
    serta memastikan perangkat lunak yang dibuat sesuai dengan kebutuhan yang telah ditentukan sebelumnya.
    Referensi:
    •	https://socs.binus.ac.id/2020/06/30/software-testing/#:~:text=Software%20testing%20merupakan%20salah%20satu,testing%20adalah%20verifikasi%20dan%20validasi.
    •	https://www.tutorialspoint.com/system_analysis_and_design/system_analysis_and_design_development_life_cycle.htm
    •	https://www.researchgate.net/publication/322343314_A_Survey_of_Effective_and_Efficient_Software_Testing

2.	Berdasarkan dari sumber yang saya baca unit test merupakan sebuah tahapan yang dilakukan untuk memastikan setiap 
    unit kode pada perangkat lunak sudah bekerja sesuai dengan harapan. Unit test ini biasanya dilakukan sebelum melakukan 
    intergartion test. Sedangkan integration testing merupakan uji coba hasil penggabungan unit atau komponen perangka lunak 
    yang berinteraksi, jadi integration test ini akan membantu dalam valiasi apakah perangkat lunak bekerja dengan semestinya. 
    Dari penjelasan unit test dan integration test maka saya dapat menyimpulkan apabila unit test dan integration test 
    tidak dilakukan maka perangkat lunak yang dikembangkan kemungkinan besar akan gagal atau tidak berfungsi sesuai dengan
    rancangan perangkat lunak yang dibuat, sehingga membuat budget yang dikeluarkan dalam proses pembuatan akan sia-sia 
    dan hal ini juga akan menghabiskan waktu dan budget lebih banyak apabila memperbaiki dari awal. 
    Referensi:
    •	https://www.guru99.com/unit-testing-guide.html#:~:text=UNIT%20TESTING%20is%20a%20type,an%20application%20by%20the%20developers.
    •	https://www.guru99.com/integration-testing.html

3.	Dari sumber yang saya baca QA engineer merupakan seseorang yang mempunyai tanggung jawab dalam menilai kualitas dari
    sebuah sistem, memastikan bahwa sistem yang dibuat berjalan dengan relevan, serta merencanakan manajemen kualitas dan 
    pengujian dari sistem. Perbedaan testing yang dilakukan oleh software engineer dan QA engineer adalah, apabila software 
    testing yang dilakukan oleh software engineer maka itu dilakukan untuk menguji suatu peragkat lunak yang dikembangkan, 
    sedangkan QA engineer itu menguji serta memastikan serta meyakinkan apakah semua proses aktivitas dalam pembangunan 
    perangkat lunak berjalan sesuai dengan standard atau ketentuannya. Proses aktivitas yang dimaksud dalam QA engineer ini 
    yaitu proses SDLC (Software Development Life Cycle). Jadi dapat disimpulkan testing yang dilakukan oleh software engineer
    ini fokus pada pengujian produk perangkat lunak sedangkan pada QA engineer berfokus pada seluruh kegiatan, proses, 
    aktivitas, bahkan metode yang digunakan dalam pengembangan perangkat lunak.
    Referensi:
    •	https://medium.com/easyread/perbedaan-software-testing-dan-software-quality-assurance-31899237bedb
    •	https://campuspedia.id/news/jarang-diketahui-orang-mari-kupas-karir-qa-engineer-sampai-tuntas/
    •	https://blog.moklet.io/engineering/yuk-berkenalan-dengan-software-quality-assurance-job-desk/

4.	Ada berbagai macam testing yang dilakukan dalam pengembangan perangkat lunak, antara lain yaitu business logic, ux, ui, 
    performa, keamanan, dan testing lainnya. Testing business logic ini memanagemen komunikasi antara aplikasi pengguna dengan
    data base. UI testing dilakukan untuk memastikan bahwa aplikasi sudah memenuhi syarat fungsional dan mencapai standar 
    kualitas serta UI testing ini juga untuk memvalidasi apakah aplikasi yang dikembangkan mudah digunakan pengguna 
    (user-friendly). UX testing merupakan proses pengumpulan informasi tentang kegunaan dan keseluruhan pengalaman pengguna 
    selama proses desain. Performance testing dilakukan untuk memastikan apakah aplikasi perangkan lunak bekerja sesuai 
    dengan beban kerja yang diekpektasikan. Menurut saya apabila testing tesebut tidak dilakukan maka kemungkinan besar 
    perangkat lunak yang dikembangkan tidak akan berhasil karena, apabila suatu perangkat lunak tidak dilakukan pengujian 
    maka kita tidak akan mengatahui apakah perangkat lunak yang dikembangkan dapat berfungsi dengan baik dan sudah sesuai 
    dengan ketentuan yang ditetapkan.
    Referensi:
    •	https://www.geeksforgeeks.org/performance-testing-software-testing/
    •	https://www.nngroup.com/articles/usability-testing-101/
    •	https://www.toptal.com/designers/ux/user-testing-methods
    •	https://www.techtarget.com/whatis/definition/business-logic
    •	https://www.ibeta.com/risks-of-not-testing-software-properly/

5.	Menurut R. M. Sharma pada jurnal “Quantitative Analysis of Automation and Manual Testing” manual testing pada 
    perangkat lunak merukana sebuah teknik pengujian dimana engineer akan menyiapkan sebuah kasus uji secara manual dan 
    menjalankannya untuk mengidentifikasi kekurangan/cacat pada perangkat lunak. Pengujian menggunakan manual testing ini 
    lebih ketat sehingga ada terdapat beberapa masalah apabila melakukan manual testing yaitu antara lain waku yang dibutuhkan
    dalam pengujian akan lama, para penguji akan banyk ikut andil dalam melakukan pengujian, kurang dapat diandalkan,
    tidak dapat deprogram sehingga penggunaan manual testing ini akan menjadi membosankan dan rawan kesalahan. Automated 
    testing merupakan bentuk testing yang dilakukan oleh QA engineer dengan cara menulis script uji untuk mengoptimasi 
    pelaksanaan testing. Salah satu kelebihan automated testing adalah testing tidak perlu dilakukan secara berulang karena 
    ada perubahan dari pihak tim developer. Meskipun begitu bukan berarti manual testing tidak diperlukan lagi, menurut
    saya manual testing masih bisa dilakukan dan bahkan dipelukan karena masih banyak aplikasi yang harus diuji secara
    manual sebelum diuji secara otomatis.
    Referensi:
    •	https://imvcportal.com.au/uploads/study_material/1504593504IJEIT1412201407$%23@_46.pdf
    •	https://medium.com/@fitrizakiyatulhidayah/automation-test-dan-manual-test-mana-yang-lebih-dibutuhkan-be76a3539031#:~:text=Tapi%20bukan%20berarti%20manual%20testing,dilakukan%20untuk%20memeriksa%20kelayakan%20otomatisasi.
    •	https://dl.acm.org/doi/pdf/10.1145/1138929.1138946
