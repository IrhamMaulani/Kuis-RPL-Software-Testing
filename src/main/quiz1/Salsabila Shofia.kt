/*
1.	Dewasa ini, pembuatan testing pada perangkat lunak umum dilakukan pada saat tahap implementasi yang dilakukan oleh software engineer. Berikan opini kalian apakah software engineer pada tahap implementasi wajib melakukan test atau tidak?
Menurut website https://opentextbc.ca/projectmanagement/chapter/chapter-17-project-implementation-overview-project-management/, pada STLC atau Software Testing Life Cycle, ada banyak tahap yang dilakukan. Salah satunya adalah tahap implementasi, tahap implementasi adalah tahap dimana perencanaan projek yang dilakukan sebelumnya dijadikan action. Pada tahap ini, software yang ingin dikembangkan mulai diubah menjadi bahasa pemrograman.
Berdasarkan referensi yang saya kutip diatas, tahap implementasi ini wajib melakukan test karena testing dapat mengurangi adanya resiko resiko yang dapat terjadi sebelum dikirim kepada klien, seperti dapat menemukan adanya kecacatan dalam aplikasi. 

2.	Unit test dan integration test merupakan test yang dilakukan pada tahap implementasi. berikan pendapat kalian jika dua test ini tidak dilakukan beserta dampak yang akan terjadi pada perangkat lunak 
Menurut website yang dikutip pada https://www.practitest.com/qa-learningcenter/resources/unit-test-vs-integration-test/ , Unit Test adalah jenis pengujian software di mana kode diuji sedikit demi sedikit untuk melihat apakah kode berfungsi seperti apa yang diharapkan, sedangkan integration test melakukan verifikasi bahwa interface pada dua unit berfungsi dengan baik.
Berdasarkan referensi diatas, menurut pendapat saya, kedua test itu sama sama penting dilakukan pada tahap implementasi agar pengembangan software dapat berjalan secara sukses. Unit test dapat membantu mencari mengapa software yang dikembangkan sedang rusak, sedangkan integration test membantu melakukan validasi apakah software berfungsi dengan baik atau tidak. Kedua test tersebut apabila tidak dilakukan akan mendapatkan dampak yang buruk terhadap pengembangan softwate. Contohnya, ketika tidak melakukan integration test, aplikasi yang dikembangkan dapat mengalami kegagalan karena tidak adanya pengujian pada interface. Contoh lain ketika kita tidak melakukan unit testing, kita dapat kesulitan dalam memastikan code tidak rusak. Jadi, apabila tidak melakukan dua test tersebut dapat memakan waktu yang lebih  banyak dalam perbaikan.

3.	Berikan pendapat kalian tentang pekerjaan QA Engineer sedangkan disisi lain Software Engineer telah melakukan testing 
Qa adalah singkatan dari quality assurance, menurut website https://resources.workable.com/qa-engineer-job-description, Qa adalah seorang yang mencari, menemukan, dan memperbaiki berbagai bug pada software sebelum dipublikasi secara manual atau otomatis.
Menurut pendapat saya setelah membaca referensi tersebut, QA Engineer dan Software Engineer secara khusus memiliki tugas yang berbeda, Software Engineer adalah orang yang memiliki skill dalam development dan testing, sementara QA terlibat dalam mempersiapkan dan mengeksekusi kasus uji secara manual atau otomatis. Software Engineer melakukan test pada kodenya pada pihak mereka sendiri, kemudian QA akan memiliki keputusan akhir apakah semua fungsi dapat berjalan sesuai yang diharapkan dan sesuai dengan keinginan pasar (https://www.quora.com/Is-QA-necessary-or-should-developers-do-their-own-testing).

4.	Terdapat banyak test pada perangkat lunak, mulai dari test business logic, UI, UX, Performa, sampai keamanan. Namun tidak semuanya dapat dilakukan karena keterbatasan waktu dan mahalnya biaya yang harus dikeluarkan. Berikan pendapat kalian dampak apa yang terjadi jika pengujian diatas tidak diberikan pada perangkat lunak 
Berdasarkan laman yang saya kutip pada https://testfort.com/blog/business-logic-in-qa-and-its-role-in-the-development-of-perfect-software, business logic adalah test dimana ia memastikan software berjalan sesuai dengan yang dirancang dan berjalan sesuai dengan seharusnya. Pengujian pada UI dan UX juga penting sesuai dengan apa yang saya baca pada website https://www.toptal.com/designers/ux/user-testing-methods, testing pada UI adalah untuk menguji fitur fitur pada software yang akan berinteraksi dengan user. Sementara UX Testing berfokus pada pengalaman keseluruhan user. Performa testing adalah  (https://www.guru99.com/performance-testing.html) proses pengujian software yang digunakan untuk menguji performa pada software, seperti waktu respons, stabilitas, dan lain-lain. Security testing (https://www.guru99.com/what-is-security-testing.html) adalah testing untuk menjaga dari berbagai macam ancaman serta resiko dari para penyusup.
Menurut pendapat saya dari beberapa sumber diatas, semua test sebisa mungkin harus dilakukan karena ada berbagai macam dampak yang akan terjadi jika salah satu dari test test tersebut tidak diuji. Pada business logic, test yang tidak dilakukan pada tahap ini dapat tidak sesuai dengan keinginan user karena tahap ini memungkinkan testers untuk memperbaiki semua ketidakakuratan di awal proses pengujian. UI dan UX testing juga penting karena pengujian UX dapat mengidentifikasi mengapa para user menggunakan software, pengujian UI agar yakin design software berjalan sesuai keinginan. Testing pada performance juga penting karena dengan adanya test pada tahap tersebut, kita dapat mengetahui bagaimana software kita berjalan, apakah ia berjalan dengan lancar atau tidak. Keamanan merupakan hal paling penting menurut saya, karena pengujian pada keamanan dapat membuat kita yakin bahwa software yang kita bangun benar benar aman dan tidak terganggu oleh gangguan seperti malfungsi, tereksplotasi, dan lain-lain. 

5.	Berikan pendapat kalian tentang testing perangkat lunak secara manual? Apakah di saat banyaknya testing secara otomatisasi dilakukan testing secara manual perlu dilakukan?
Manual Testing pada laman https://www.guru99.com/manual-testing.html adalah salah satu jenis pengujian software dimana semua kasus diekseskusi secara manual oleh para tester tanpa menggunakan alat yang berfungsi secara otomatis. Ketika seorang tester melakukan test menggunakan metode manual, ia dapat menguji software sebagai perspektif end-user dan lebh mengenal produk, dimana ia dapat memberikan feedback yang cepat dari aplikasi (https://www.javatpoint.com/manual-testing).
Menurut pendapat saya dari referensi-referensi diatas, Manual Testing masih penting dilakukan karena banyak alasan, terutama pada aplikasi yang tergolong sederhana. Manual Testing tidak memerlukan banyak biaya dan tingkat kefokusan yang lebih tinggi karena menggunakan manusia sebagai testernya. Setiap software perlu dicek secara manual terlebih dahulu sebelum melakukan pengujian secara otomatis, karena manual test menangani kasus uji yang kompleks, sementara pengujian secara otomattis mengatasi test yang berulang ulang.
*/
