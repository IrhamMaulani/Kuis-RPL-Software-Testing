/*
REKAYASA PERANGKAT LUNAK
1.	Dewasa ini, pembuatan testing pada perangkat lunak umum dilakukan pada saat tahap implementasi yang dilakukan oleh software engineer. Berikan opini kalian apakah software engineer pada tahap implementasi wajib melakukan test atau tidak? 
Jawab :
	Menurut sumber : Software Testing (binus.ac.id) Software testing merupakan salah satu bagian penting dan sering digunakan dalam pengembangan dari suatu software. Dengan adanya software testing, software engineer mampu mengenali error atau kecacatan yang ada dari suatu software.Fitur-fitur utama pada software testing adalah verifikasi dan validasi. Software testing digunakan untuk menjawab pernyataan sebagai : Apakah software dapat berjalan atau berperilaku sebagaimana yang sudah ditentukan, sedangkan tujuan Software testing menurut : Pentingnya Melakukan Pengujian Perangkat Lunak (Software Testing) â€“ Software Engineering (ittelkom-pwt.ac.id) adalah melakukan pengujian perangkat lunak untuk memastikan bahwa software yang dihasilkan sesuai dengan kebutuhan (requirement) yang sebelumnya ditentukan. Ketika requirement dari suatu sistem telah disusun maka semestinya sudah ada suatu pengujian perencanaan (test plan). Selain itu suatu proses testing membutuhkan tujuan akhir yang dapat dinilai sehingga pihak tester bisa berhenti melakukan suatu testing ketika tujuan-tujuan itu tercapai, Menurut QA Leader Verifone, Delvianti, pengujian perlu dilakukan karena biasanya ada yang terlewat ketika seorang developer mengembangkan aplikasi. Jika tahapan ini terlewat, maka tingkat kepercayaan untuk merilis aplikasi itu menjadi rendah, hal ini  saya ketahui melalui https://biztechacademy.id/manfaat-pengujian-perangkat-lunak/
	Sedangkan menurut saya Software Testing wajib dilakukan oleh seorang software engineer sebelum merilis suatu proyek, hal ini dilakukan untuk mengetahui bug atau eror yang terjadi pada system yang dibuat, sehingga dapat diperbaiki sebelum melakukan perilisan, tentu saja berbeda antara yang menggunakan testing dan tidak, engineer yang tidal melakukan testing bias saja nanti nya akan kurang dipercaya karena bug atau eror yang ada diaplikasi tersebut yang tidak dideteksi sebelumnya.


2.	Unit test dan integration test merupakan test yang dilakukan pada tahap implementasi. berikan pendapat kalian jika dua test ini tidak dilakukan beserta dampak yang akan terjadi pada perangkat lunak
Jawab : 
	Menurut Black (2002:5), unit testing merupakan pengujian yang mencakup pengujian sepotong atau sebagian kode. Test case untuk pengujian ini dapat dirancang secara struktural atau behavioral, tergantung pada standar dari organisasi atau pihak pengembang. Unit testing dapat berupa white box testing dalam arti bahwa programmer mengetahui stuktur internal dari unit yang diuji dan berfokus pada bagaimana pengujian mempengaruhi operasi internal. Black juga mengemukakan bahwa integration atau product testing adalah pengujian yang mencari bug dalam hubungan dan antarmuka antara pasangan komponen atau sekelompok komponen dalam sistem yang diuji. Integration testing harus dilakukan di dalam koordinasi dengan proyek, pada tingkat aktivitas mengintegrasikan keseluruhan sistem, yang meletakkan semua komponen yang berhubungan bersama-sama pada satu waktu. Hal ini saya dapatkan melalui 2012-1-00007-SI Bab2001.doc (live.com)
	Menurut saya kedua tes tersebut perlu dilakukan untuk mengetahui setiap unsur program melaksanakan tugasnya dengan baik serta mengetahui bagaimana hubungan antar satu bagian dengan bagian lainnya. Unit test merupakan pengujian perunit suatu program jika hal ini tidak dilakukan maka kita tidak mengetahui apakah semua nya berjalan dengan baik atau kah tidak, sedangkan jika kita tidak menggunakan pengujian Integration maka kita tidak dapat mengetahui bagaimana keterhubungan antara satu bagian dengan bagian lainnya, jika kita telah melakukan kedua tes tersebut maka kita dapat mengetahui kesalahan apa saja yang terjadi didalam code atau system yang kita buat, namun jika kita hanya menggunakan Integration test tanpa Unit test maka kita tidak akan tau kesalahan apa saja yang terjadi pada unit-unit bagian yang kita buat	 

3.	Berikan pendapat kalian tentang pekerjaan QA Engineer sedangkan disisi lain Software Engineer telah melakukan testing 
Jawab : 
Menurut Perbedaan Software Testing dan Software Quality Assurance | by lily anastasia | Easyread | Medium Software Testing itu adalah satu bidang atau bagian dari tahapan pembangunan atau pengembangan suatu perangkat lunak yang khusus untuk melakukan pengujian suatu perangkat lunak yang sedang dibangun atau dikembangkan. Sedangkan, Software Quality Assurance atau SQA adalah sebuah proses yang dilakukan untuk memastikan atau meyakinkan bahwa semua proses atau aktivitas dalam pembangunan atau pengembangan perangkat lunak berjalan sesuai dengan standard atau ketentuannya. Menurut laman tersebut, Software Engineer dan QA engineer memiliki sebuah perbedaan namun antara keduanya masih memiliki keterkaitan dan seorang QA engineer,  dimana Software testing fokus pengujiannya yaitu pada produk atau perangkat lunaknya, sedangkan SQA berfokus pada seluruh kegiatan, proses , aktivitas, bahkan metode yang digunakan dalam pembangunan dan pengembangan perangkat lunak termasuk fase testing
		Sedangkan menurut saya antara Software Engineer dan QA Engineer memiliki sedikit perbedaan di focus pekerjaan mereka, hal itulah yang membuat QA Engineer harus tetap ada walaupun Software Engineer sudah melakukan beberapa testing, QA juga berfungsi memeriksa kualitas produk, serta memeriksa pekerjaan yang mungkin telah dilakukan olah Software Engineer dan menyesuaikannya dengan keinginan user/pasar.

4.	Terdapat banyak test pada perangkat lunak, mulai dari test business logic, UI, UX, Performa, sampai keamanan. Namun tidak semuanya dapat dilakukan karena keterbatasan waktu dan mahalnya biaya yang harus dikeluarkan. Berikan pendapat kalian dampak apa yang terjadi jika pengujian diatas tidak diberikan pada perangkat lunak
Jawab :
	Menurut laman https://ichi.pro/id/jangan-lupakan-logika-bisnis-207836227913204  tujuan dari business logic pada software yaitu memastikan bahwa perangkat lunak yang dihasilkan memberikan logika bisnis yang diperlukan dalam domain yang benar. sedangakan penggunaan UI/UX merupakan hal yang penting pada sebuah proses pengembangan perangkat lunak, karena untuk memenuhi prinsip-prinsip dalam pembuatan design sebuah perangkat lunak atau aplikasi maka diperlukan suatu rancangan yang akan dijadikan pedoman atau petunjuk bagi developer team, agar tidak terjadi miss konsepsi ataupun intepretasi yang berbeda beda pada hasil design User Interface hal ini terdapat pada laman https://medium.com/ppl-a1-iebs/ui-ux-design-guideline-c6f5f346aefd , lalu mengapa Performance testing perlu dilakukan? Pengujian kinerja adalah suatu evaluasi terhadap produk untuk menentukan apakah sebuah produk tersebut memenuhi harapan dalam kecepatan waktu, skalabilitas, dan stabilitas dibawah beban kerja yang diharapkan (https://www.belajarcpp.com/artikel/penjelasan-dan-macam-macam-pengujian-perangkat-lunak-software-testing/ ). Security testing adalah jenis pengujian perangkat lunak yang dilakukan untuk mengidentifikasi kerentanan serta memastikan bahwa data dan sumber daya sistem di dalamnya sudah terlindungi dengan baik dari para penyusup (https://www.logique.co.id/blog/2021/03/02/security-testing/ )
	Menurut saya keseluruhan testing tersebut perlu dilakukan agar promgram/system yang dihasilkan sesuai dengan keinginan kita sebagai pembuat dan pengguna, dimana test business logic diperlukan untuk mengetahui keinginan pasar dan jika test ini tidak dilakukan maka perancang tidak dapat mengetahui apa saja keinginana pasar dan bagaimana panduan strategi bisnins yang tepat, selanjutnya test UI/UX jika tidak dilakukan maka bisa saja antarmuka system yang dibuat tidak sesuai berdasarkan prinsip-prinsip desain yang berlaku, selain itu dengan adannya UI/UX maka tampilan antarmuka akan semakin elegan dan mudah untuk dipahami, sedangkan test performa dilakukan untuk mengetahui bagaimana system atau program yang kita buat untuk menjalankan suatu tugas apakah sesuai atau tidak jika kita tidak melakukan test ini maka kita tidak akan mengetahui apakah program tersebut dapat berjalan sesuai mesti nya ataukah tidak, sedangkan jika kita tidak membuat testing kepada keamanan pasti kita tidak tahu apakah peralatan yang ada didalamnya terlindungi dengan baik atau kah tidak dan bisa saja karena hal itu program kita dapat dibobol oleh orang-orang yang tidak bertanggung jawab.
	
5.	Berikan pendapat kalian tentang testing perangkat lunak secara manual? Apakah di saat banyaknya testing secara otomatisasi dilakukan testing secara manual perlu dilakukan?
JAWAB :
Manual  testing  adalah  sebuah teknik  testing dimana tester menyiapkan test cases secara manual dan mengeksekusi test cases untuk mengidentifikasi defect di software  (Sharma, 2014: 252; Dobles, I dkk, 2019: 7), secara sederhana Menual Testing adalah langkah untuk mencari cacat atau bug pada program perangkat lunak, pada metode ini tester/penguji memiliki peran penting sebagai pengguna akhir untuk pengecekan semua fitur aplikasi bekerja dengan benar. Penguji melakukan pengecekan secara manual tanpa menggunakan bantuan dari tools atau scripts, sedangkan Automated  software  testing adalah penggujian melibatkan pengembangan test script menggunakan scripting languages  seperti  phyton,  java  script,  atau  tool command language (TCL), sehingga test case dapat dieksekusi oleh komputer dengan minimal campur tangan  manusia.  (Sharma,R,M,  2014: 252).  Pengertian lain dari Automated Testing ini adalah sebuah pengujian yang bergantung pada pra-scripted tes yang berjalan secara otomatis, fungsinya untuk membandingkan hasil yang diharapkan dengan hasil yang sebenarnya. Sehingga dapat mengetahui apakah aplikasi berjalan sesuai dengan apa yang diharapkan ataukah tidak. Hal ini saya baca melalui laman https://www.researchgate.net/publication/340583631_EVALUASI_PENGGUNAAN_MANUAL_DAN_AUTOMATED_SOFTWARE_TESTING_PADA_PELAKSANAAN_END-TO-END_TESTING
Dari definisi diatas dapat diketahu perbedaan antara kedua pengujian tersebut yakni, pengujian manual adalah proses pengujian perangkat lunak secara manual untuk mencarari kecacatan sebuah program. Sebaliknya, pengujian otomatis adalah proses pengujian program perangkat lunak menggunakan perangkat lunak khusus untuk mengontrol pelaksanaan tes dan membandingkan hasil aktual dengan hasil yang diperkirakan. Perbedaan mendasar terletak pada Waktu yang Dibutuhkan,  Ketepatan/Akurasi, serta dana yang dibutuhkan. Hal ini saya baca melalui laman https://id.strephonsays.com/what-is-the-difference-between-manual-testing-and-automated-testing
Menurut saya apakah perlu menggunakan Manual Testing atau tidak itu tergantung dari program yang kita buat, jika program yang kita buat itu sederhana maka kita dapat menggunakan manuasl testing karena dengan manual maka dana yang diperlukan tidak terlalu besar, namun membutuhkan ketelian dan waktu yang lebih besar, sedangkan jika kita membuat sebuah program yang kompleks maka sangat disarankan untuk melakukan testing dengan otomatis karena akan menghemat waktu dan pekerjaan akan menjadi lebih  mudah selain itu karena otomatis maka dia akan menghilangkan human eror yang sering dilakukan, walaupun biaya yang dikeluarkan cukup mahal dan diawal akan sulit untuk menggunakannya di awal karena banyak tools yang perlu kita pahami.

*/

